{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMLAzqvOn/UDHTl2CQ/9fd9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"VaVgXrliDlDe","executionInfo":{"status":"ok","timestamp":1732819002276,"user_tz":-120,"elapsed":6898,"user":{"displayName":"Wordy","userId":"17957092315917252149"}}},"outputs":[],"source":["import pickle\n","import numpy as np\n","from sklearn import linear_model\n","import sklearn.metrics as sm\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"8e6eViicD6Zg","executionInfo":{"status":"ok","timestamp":1732819061014,"user_tz":-120,"elapsed":7873,"user":{"displayName":"Wordy","userId":"17957092315917252149"}},"outputId":"e60c9da8-3ec5-4e80-e3c1-e2336d82705c"},"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-7e9f6ea8-0fee-41af-86a3-fe49d10e66f1\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-7e9f6ea8-0fee-41af-86a3-fe49d10e66f1\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving data_regr_3.txt to data_regr_3.txt\n"]}]},{"cell_type":"code","source":["input_file = 'data_regr_3.txt'\n","data = np.loadtxt(input_file, delimiter=',')\n","X, y = data[:, :-1], data[:, -1]"],"metadata":{"id":"vrvL_To6EJA3","executionInfo":{"status":"ok","timestamp":1732819155600,"user_tz":-120,"elapsed":324,"user":{"displayName":"Wordy","userId":"17957092315917252149"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["num_training = int(0.8 * len(X))\n","num_test = len(X) - num_training"],"metadata":{"id":"oVzlNdMfEhd4","executionInfo":{"status":"ok","timestamp":1732819165423,"user_tz":-120,"elapsed":2,"user":{"displayName":"Wordy","userId":"17957092315917252149"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["X_train, y_train = X[:num_training], y[:num_training]\n","X_test, y_test = X[num_training:], y[num_training:]"],"metadata":{"id":"BkLwDGbPEkN3","executionInfo":{"status":"ok","timestamp":1732819180736,"user_tz":-120,"elapsed":558,"user":{"displayName":"Wordy","userId":"17957092315917252149"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["regressor = linear_model.LinearRegression()\n","regressor.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"gtdz_La9Eoyn","executionInfo":{"status":"ok","timestamp":1732819198237,"user_tz":-120,"elapsed":561,"user":{"displayName":"Wordy","userId":"17957092315917252149"}},"outputId":"1c5144b1-8522-4ee3-e3b5-b3fbb4c5d26d"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["y_test_pred = regressor.predict(X_test)"],"metadata":{"id":"RMb3DvQFEsE3","executionInfo":{"status":"ok","timestamp":1732819209226,"user_tz":-120,"elapsed":1,"user":{"displayName":"Wordy","userId":"17957092315917252149"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["plt.scatter(X_test, y_test, color='green')\n","plt.plot(X_test, y_test_pred, color='black', linewidth=4)\n","plt.xticks(())\n","plt.yticks(())\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":406},"id":"4COg8Z5dEwhf","executionInfo":{"status":"ok","timestamp":1732819227634,"user_tz":-120,"elapsed":879,"user":{"displayName":"Wordy","userId":"17957092315917252149"}},"outputId":"963cee22-7e4d-4728-b200-5809c6cb7e73"},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["print(\"Linear regressor performance:\")\n","print(\"Mean absolute error =\",\n","round(sm.mean_absolute_error(y_test, y_test_pred), 2))\n","print(\"Mean squared error =\",\n","round(sm.mean_squared_error(y_test, y_test_pred), 2))\n","print(\"Median absolute error =\",\n","round(sm.median_absolute_error(y_test, y_test_pred), 2))\n","print(\"Explain variance score =\",\n","round(sm.explained_variance_score(y_test, y_test_pred), 2))\n","print(\"R2 score =\", round(sm.r2_score(y_test, y_test_pred), 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"baRU9ULEEzTn","executionInfo":{"status":"ok","timestamp":1732819238224,"user_tz":-120,"elapsed":304,"user":{"displayName":"Wordy","userId":"17957092315917252149"}},"outputId":"653e5f54-fca9-46f1-eb3b-7328a0287502"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Linear regressor performance:\n","Mean absolute error = 3.59\n","Mean squared error = 17.39\n","Median absolute error = 3.39\n","Explain variance score = 0.02\n","R2 score = -0.16\n"]}]},{"cell_type":"code","source":["output_model_file = 'model.pkl'\n","with open(output_model_file, 'wb') as f:\n","  pickle.dump(regressor, f)"],"metadata":{"id":"2J7jaFJZE6UP","executionInfo":{"status":"ok","timestamp":1732819281201,"user_tz":-120,"elapsed":555,"user":{"displayName":"Wordy","userId":"17957092315917252149"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["with open(output_model_file, 'rb') as f:\n","  regressor_model = pickle.load(f)\n","\n","y_test_pred_new = regressor_model.predict(X_test)\n","print(\"\\nNew mean absolute error =\", round(sm.mean_absolute_error(y_test, y_test_pred_new), 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XjQCOBTtFAsv","executionInfo":{"status":"ok","timestamp":1732819383564,"user_tz":-120,"elapsed":322,"user":{"displayName":"Wordy","userId":"17957092315917252149"}},"outputId":"d983dc64-c5fa-4988-ad58-62bc5d899a06"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","New mean absolute error = 3.59\n"]}]}]}